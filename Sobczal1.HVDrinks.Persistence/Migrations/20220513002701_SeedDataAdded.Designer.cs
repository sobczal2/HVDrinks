// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sobczal1.HVDrinks.Persistence;

#nullable disable

namespace Sobczal1.HVDrinks.Persistence.Migrations
{
    [DbContext(typeof(HVDrinksDbContext))]
    [Migration("20220513002701_SeedDataAdded")]
    partial class SeedDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.Cocktail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Cocktails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(1636),
                            Description = "A mojito is a classic highball drink that originated in Cuba. Not surprisingly, this cocktail uses ingredients indigenous to Cuba, including rum, lime, mint, and sugar. The mixture is topped off with a little club soda to create a thirst-quenching libation. It requires a bit more labor than many mixed drinks, as it involves first muddling fresh mint, lime, and sugar together to release the flavors. But it's well worth it for a refreshing, fizzy, and mildly sweet rum cocktail that remains one of the most popular to this day.",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(1672),
                            Name = "Mojito"
                        });
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CocktailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CocktailId");

                    b.ToTable("CocktailImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b25695e-ff81-4e41-b8ec-7977559985b7"),
                            Alt = "Stock image of a smart dishwasher",
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(2974),
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(2984),
                            Url = "somerandomurl1"
                        });
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CocktailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CocktailId");

                    b.HasIndex("IngredientId");

                    b.ToTable("CocktailIngredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2b6338f-500f-4033-bc31-13aaaaa92472"),
                            Amount = 10.0,
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5067),
                            IngredientId = new Guid("14a46fbb-d82c-4570-bc86-5adf7c3de44e"),
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5077)
                        },
                        new
                        {
                            Id = new Guid("22cfc3d8-d2df-4a04-93d0-ce600e7b6b35"),
                            Amount = 0.5,
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5085),
                            IngredientId = new Guid("7625a4de-4db6-45db-be34-480fce62176a"),
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5087)
                        },
                        new
                        {
                            Id = new Guid("661dbc23-2cd1-4697-8bc6-c1af72058197"),
                            Amount = 2.0,
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5091),
                            IngredientId = new Guid("27033481-37a0-4a27-a8b5-46b9fff40b46"),
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5092)
                        },
                        new
                        {
                            Id = new Guid("5c497f0f-5af5-44d4-a1a5-2ce7a964859c"),
                            Amount = 5.0,
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5096),
                            IngredientId = new Guid("33529d05-4c02-49cc-8cee-3e097b75631c"),
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(5097)
                        });
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailRecipeStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CocktailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CocktailId");

                    b.ToTable("CocktailRecipeStep");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a521831-bf13-41e8-b335-6d3fada0bd7c"),
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6242),
                            Description = "Place mint leaves and 1 lime wedge into a sturdy glass. Use a muddler and crush to release mint oils and lime juice.",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6252),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("bb82da15-ffb8-4a28-aeeb-f310d75a6a7d"),
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6259),
                            Description = "Add remaining lime wedges and 2 tablespoons sugar, and muddle again to release the lime juice. Do not strain the mixture.",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6260),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("1a46275b-a5e3-4cf8-be21-e942df3eb863"),
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6265),
                            Description = "Fill the glass almost to the top with ice. Pour in rum and fill the glass with club soda.",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6266),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("4d14bcff-2161-4acc-93ab-b1e6d5d1fc1a"),
                            CocktailId = new Guid("cdcf7ae2-a928-453e-8373-34ed6c1b9ddc"),
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6270),
                            Description = "Stir, taste, and add more sugar if desired.",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6271),
                            StepNumber = 4
                        });
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Ingredients.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AlcoholContent")
                        .HasPrecision(2)
                        .HasColumnType("float(2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14a46fbb-d82c-4570-bc86-5adf7c3de44e"),
                            AlcoholContent = 0.0,
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6714),
                            Description = "Fresh mint leaves",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6719),
                            Name = "Mint leaves",
                            Unit = 1
                        },
                        new
                        {
                            Id = new Guid("7625a4de-4db6-45db-be34-480fce62176a"),
                            AlcoholContent = 0.0,
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6724),
                            Description = "Good citrus fruit",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6726),
                            Name = "Lime",
                            Unit = 1
                        },
                        new
                        {
                            Id = new Guid("27033481-37a0-4a27-a8b5-46b9fff40b46"),
                            AlcoholContent = 0.0,
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6729),
                            Description = "White death",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6730),
                            Name = "Sugar",
                            Unit = 2
                        },
                        new
                        {
                            Id = new Guid("33529d05-4c02-49cc-8cee-3e097b75631c"),
                            AlcoholContent = 0.0,
                            CreatedBy = "SYSTEM",
                            DateCreated = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6733),
                            Description = "Frozen water in cubes",
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2022, 5, 13, 2, 27, 0, 782, DateTimeKind.Local).AddTicks(6735),
                            Name = "Ice cubes",
                            Unit = 1
                        });
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailImage", b =>
                {
                    b.HasOne("Sobczal1.HVDrinks.Domain.Cocktails.Cocktail", "Cocktail")
                        .WithMany("CocktailImages")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cocktail");
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailIngredient", b =>
                {
                    b.HasOne("Sobczal1.HVDrinks.Domain.Cocktails.Cocktail", "Cocktail")
                        .WithMany("CocktailIngredients")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sobczal1.HVDrinks.Domain.Ingredients.Ingredient", "Ingredient")
                        .WithMany("CocktailIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cocktail");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.CocktailRecipeStep", b =>
                {
                    b.HasOne("Sobczal1.HVDrinks.Domain.Cocktails.Cocktail", "Cocktail")
                        .WithMany("RecipeSteps")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cocktail");
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Cocktails.Cocktail", b =>
                {
                    b.Navigation("CocktailImages");

                    b.Navigation("CocktailIngredients");

                    b.Navigation("RecipeSteps");
                });

            modelBuilder.Entity("Sobczal1.HVDrinks.Domain.Ingredients.Ingredient", b =>
                {
                    b.Navigation("CocktailIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
